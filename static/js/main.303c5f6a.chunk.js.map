{"version":3,"sources":["components/MessageForm.jsx","components/MyMessage.jsx","components/TheirMessage.jsx","components/ChatFeed.jsx","components/LoginForm.jsx","App.js","index.js"],"names":["MessageForm","props","useState","value","setValue","chatId","creds","handleSubmit","event","preventDefault","text","trim","length","sendMessage","className","onSubmit","placeholder","onChange","target","isTyping","htmlFor","PictureOutlined","type","multiple","id","style","display","files","SendOutlined","MyMessage","message","attachments","src","file","alt","float","marginRight","color","backgroundColor","TheirMessage","lastMessage","isFirstMessageByUser","sender","username","backgroundImage","avatar","marginLeft","ChatFeed","chats","activeChat","userName","messages","chat","renderReadReceipts","isMyMessage","people","map","person","index","last_read","title","keys","Object","key","lastMessageKey","width","renderMessages","height","LoginForm","setUsername","password","setPassword","error","setError","e","a","authObject","axios","get","headers","localStorage","setItem","window","location","reload","required","align","App","getItem","projectID","userSecret","renderChatFeed","chatAppProps","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.303c5f6a.chunk.js","sourcesContent":["import { useState } from 'react';\r\nimport { sendMessage, isTyping } from 'react-chat-engine';\r\nimport { SendOutlined, PictureOutlined } from '@ant-design/icons';\r\n\r\nconst MessageForm = (props) => {\r\n    const [value, setValue] = useState('');\r\n    const { chatId, creds } = props;\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        const text = value.trim();\r\n\r\n        if(text.length > 0) sendMessage(creds, chatId, { text });\r\n\r\n        setValue('');\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        setValue(event.target.value);\r\n\r\n        isTyping(props, chatId);\r\n    }\r\n\r\n    const handleUpload = (event) => {\r\n        sendMessage(creds, chatId, { files: event.target.files, text: '' });\r\n    }\r\n\r\n    return(\r\n        <form className=\"message-form\" onSubmit={handleSubmit}>\r\n            <input \r\n                className=\"message-input\"\r\n                placeholder=\"Escribe un mensaje...\"\r\n                value={value}\r\n                onChange={handleChange}\r\n                onSubmit={handleSubmit}\r\n            />\r\n            <label htmlFor=\"upload-button\">\r\n                <span className=\"image-button\" >\r\n                    <PictureOutlined className=\"picture-icon\" />\r\n                </span>\r\n            </label>\r\n            <input \r\n                type=\"file\"\r\n                multiple={false}\r\n                id=\"upload-button\"\r\n                style={{ display: 'none' }}\r\n                onChange={handleUpload}\r\n            />\r\n            <button type=\"submit\" className=\"send-button\">\r\n                <SendOutlined className=\"send-icon\" />\r\n            </button>\r\n        </form>\r\n    );\r\n} \r\n\r\nexport default MessageForm;","const MyMessage = ({ message }) => {\r\n    if(message?.attachments?.length > 0) {\r\n        return(\r\n            <img \r\n                src={message.attachments[0].file}\r\n                alt=\"message-attachment\"\r\n                className=\"message-image\"\r\n                style={{ float: 'right' }}\r\n            />\r\n        )\r\n    }\r\n\r\n    return(\r\n        <div className=\"message\" style={{ float: 'right', marginRight: '18px', color: 'white', backgroundColor: '#3B2A50' }}> \r\n            {message.text}\r\n        </div>\r\n    );\r\n} \r\n\r\nexport default MyMessage;","const TheirMessage = ({ lastMessage, message }) => {\r\n    const isFirstMessageByUser = !lastMessage || lastMessage.sender.username !== message.sender.username;\r\n\r\n    return(\r\n        <div className=\"message-row\"> \r\n            {isFirstMessageByUser && (\r\n                <div \r\n                    className=\"message-avatar\" \r\n                    style={{ backgroundImage: `url(${message?.sender?.avatar})` }}\r\n                />\r\n            )}\r\n            {message?.attachments?.length > 0 \r\n                ? (<img \r\n                    src={message.attachments[0].file}\r\n                    alt=\"message-attachment\"\r\n                    className=\"message-image\"\r\n                    style={{ marginLeft: isFirstMessageByUser ? '4px' : '48px' }}\r\n                />)\r\n                : (\r\n                    <div className=\"message\" style={{ float: 'left', backgroundColor: '#CABCDC',\r\n                    marginLeft: isFirstMessageByUser ? '4px' : '48px' }}> \r\n                    {message.text}\r\n                    </div>\r\n                )\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TheirMessage;","import MessageForm from './MessageForm';\r\nimport MyMessage from './MyMessage';\r\nimport TheirMessage from './TheirMessage';\r\n\r\nconst ChatFeed = (props) => {\r\n    const { chats, activeChat, userName, messages } = props;\r\n\r\n    const chat = chats && chats[activeChat];\r\n\r\n    const renderReadReceipts = (message, isMyMessage) => {\r\n        return chat.people.map((person, index) => person.last_read === message.id && (\r\n            <div \r\n                key={`read_${index}`}\r\n                className=\"read-receipt\"\r\n                style={{ float: isMyMessage ? 'right' : 'left',\r\n                        backgroundImage: `url(${person?.person?.avatar})` }}\r\n            />\r\n        ))\r\n    }\r\n\r\n    const renderMessages = () => {\r\n        const keys = Object.keys(messages);\r\n\r\n        return keys.map((key, index) => {\r\n            const message = messages[key];\r\n            const lastMessageKey = index === 0 ? null : keys[index - 1];\r\n            const isMyMessage = userName === message.sender.username;\r\n\r\n            return(\r\n                <div key={`msg_${index}`} style={{ width: '100%' }}>\r\n                    <div className=\"message-block\">\r\n                        {\r\n                            isMyMessage\r\n                            ? <MyMessage message={message} />\r\n                            : <TheirMessage message={message} lastMessage={messages[lastMessageKey]} />\r\n                        }\r\n                        <div className=\"read-receipts\" \r\n                            style={{ marginRight: isMyMessage ? '18px' : '0px',\r\n                            marginLeft: isMyMessage ? '0px' : '18px' }} >\r\n                                {renderReadReceipts(message, isMyMessage)}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        });\r\n    }\r\n\r\n    if(!chat) return 'Loading...';\r\n\r\n    return(\r\n        <div className=\"chat-feed\">\r\n            <div className=\"chat-title-container\"> \r\n                <div className=\"chat-title\">{ chat?.title }</div>\r\n                <div className=\"chat-subtitle\">{ chat.people.map(person => `${person.person.username} `) }</div>\r\n            </div>\r\n            { renderMessages() }\r\n            <div style={{ height: '100px' }} />\r\n            <div className=\"message-form-container\" >\r\n                <MessageForm {...props} chatId={activeChat} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChatFeed;","import { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst LoginForm = () => {\r\n    const [ username, setUsername ] = useState('');\r\n    const [ password, setPassword ] = useState('');\r\n    const [ error, setError ] = useState('')\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const authObject = {\r\n            'Project-ID': 'a535e95b-8fbb-46fd-b164-46d3e687cd44',\r\n            'User-Name': username,\r\n            'User-Secret': password\r\n        }\r\n\r\n        try {\r\n            await axios.get('https://api.chatengine.io/chats', { headers: authObject });\r\n\r\n            localStorage.setItem('username', username);\r\n            localStorage.setItem('password', password);\r\n\r\n            window.location.reload();\r\n        } catch (error) {\r\n            setError('Pone bien tus datos ctm')\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className=\"wrapper\">\r\n            <div className=\"form\">\r\n                <h1 className=\"title\">ZHAT</h1>\r\n                <form onSubmit={handleSubmit}>\r\n                    <input type=\"text\" value={username} onChange={(e) => setUsername(e.target.value)}\r\n                    className=\"input\" placeholder=\"Nombre de usuario\" required />\r\n                    <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)}\r\n                    className=\"input\" placeholder=\"Contraseña\" required />\r\n                    <div align=\"center\">\r\n                        <button type=\"submit\" className=\"button\">\r\n                            <span>Entrar al Zhat</span>\r\n                        </button>\r\n                        <h2 className=\"error\">{error}</h2>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginForm;","import { ChatEngine } from 'react-chat-engine';\r\n\r\nimport ChatFeed from './components/ChatFeed';\r\nimport LoginForm from './components/LoginForm';\r\n\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n    if(!localStorage.getItem('username')) return <LoginForm />\r\n\r\n    return(\r\n        <ChatEngine \r\n            height=\"100vh\"\r\n            projectID=\"a535e95b-8fbb-46fd-b164-46d3e687cd44\"\r\n            userName={localStorage.getItem('username')}\r\n            userSecret={localStorage.getItem('password')}\r\n            renderChatFeed={(chatAppProps) => <ChatFeed {...chatAppProps} />}\r\n        />\r\n    )\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}