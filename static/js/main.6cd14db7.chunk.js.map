{"version":3,"sources":["components/ChatUi/Utilities/dateToString.js","components/ChatUi/ChatFeed/TitleSection/index.js","components/ChatUi/ChatFeed/Steps/AuthFail.js","components/ChatUi/ChatFeed/Steps/Loading.js","components/ChatUi/ChatFeed/Steps/Welcome.js","components/ChatUi/ChatFeed/Message/DatePartition.js","components/ChatUi/ChatFeed/Message/Thumbnail.js","components/ChatUi/Utilities/colorMapping.js","components/ChatUi/components/Avatar/Dot.js","components/ChatUi/ChatFeed/Message/MyMessage.js","components/ChatUi/components/Avatar/Avatar.js","components/ChatUi/ChatFeed/Message/TheirMessage.js","components/ChatUi/ChatFeed/Message/index.js","components/ChatUi/ChatFeed/MessageForm/Thumbnail.js","components/ChatUi/ChatFeed/MessageForm/FileRow.js","components/ChatUi/ChatFeed/MessageForm/ImagesInput.js","components/ChatUi/components/Input/TextInput.js","components/ChatUi/components/Input/TextAreaInput.js","components/ChatUi/components/Input/Autocomplete.js","components/ChatUi/ChatFeed/MessageForm/index.js","components/ChatUi/ChatFeed/index.js","components/ChatUi/components/Button/Button.js","components/ChatUi/ChatList/ChatForm/index.js","components/ChatUi/ChatList/index.js","components/ChatUi/ChatSettings/People/Person.js","components/ChatUi/ChatSettings/People/PersonForm/Option.js","components/ChatUi/ChatSettings/People/PersonForm/index.js","components/ChatUi/ChatSettings/People/index.js","components/ChatUi/ChatSettings/Photos/Thumbnail.js","components/ChatUi/ChatSettings/Photos/index.js","components/ChatUi/ChatSettings/Options/index.js","components/ChatUi/ChatSettings/TitleForm/index.js","components/ChatUi/ChatSettings/ChatSettings.js","components/ChatUi/ChatSettings/index.js","components/SigninForm.jsx","components/LoginForm.jsx","App.js","index.js"],"names":["timeSinceDate","date","day","substr","month","year","hour","minute","second","sent","Date","setHours","setMinutes","setSeconds","dayStr","toString","timeStr","daySinceSent","Title","chat","this","props","className","title","last_message","created","length","Component","AuthFail","style","height","textAlign","width","paddingTop","src","alt","fontSize","paddingLeft","href","Loading","LoadingOutlined","position","top","Welcome","months","DatePartition","date_time","monthIndex","parseInt","time","timeSuffix","String","lastCreated","lastDate","getDate","thisDate","formatDate","Thumbnail","attachment","file","colors","stringToColor","str","sum","i","charCodeAt","stringToNumber","Dot","state","avatar","split","setState","updateImg","color","username","customStyle","styles","dot","backgroundColor","backgroundImage","backgroundRepeat","backgroundPosition","backgroundSize","borderRadius","setConfiguration","maxScreenClass","Message","selected","message","people","map","chatPerson","index","id","last_read","person","float","marginLeft","attachments","lastMessage","nextMessage","topRightRadius","sender_username","bottomRightRadius","paddingBottom","onMouseEnter","onMouseLeave","display","renderAttachments","paddingRight","xs","sm","md","text","myMessage","renderReads","cursor","padding","whiteSpace","Avatar","is_online","substring","toUpperCase","avatarText","show_online","status","fontWeight","border","TheirMessage","topLeftRadius","bottomLeftRadius","nameText","sender","theirMessage","cusor","creds","userName","FileRow","hovered","name","URL","createObjectURL","CloseCircleTwoTone","onClick","onRemove","React","files","renderFiles","ImagesInput","event","Array","target","keys","push","onSelectFiles","encType","type","accept","onChange","e","onSelect","multiple","TextInput","focused","value","default","handleChange","defaultStyle","focusInput","input","placeholder","label","onBlur","onFocus","outline","boxSizing","TextAreaInput","resize","textarea","document","getElementById","Math","min","scrollHeight","key","preventDefault","normalize","onSubmit","rows","onKeyDown","AutoComplete","showAll","count","max","results","options","option","JSON","stringify","toLowerCase","indexOf","getNames","renderOption","close","CloseOutlined","overflow","renderOptions","MessageForm","splice","isTyping","chatId","trim","sendMessage","data","htmlFor","handleSubmit","bind","form","ChatFeed","duration","setTimeout","typingData","activeChat","typer","feed","scrollTop","messages","chats","Object","lastMessageKey","nextMessageKey","_","isEmpty","scrollDown","undefined","renderMessages","renderTypers","Button","icon","theme","hoverStyle","hoverButton","themeStyle","dangerButton","button","PlusOutlined","ArrowUpOutlined","DeleteOutlined","UserAddOutlined","opacity","ChatForm","newChat","ChatList","readLastMessage","chat_person","extraStyle","renderChatCard","onChatClick","chatContainer","titleText","messageText","values","sort","a","b","aDate","bDate","chatListContainer","chatsContainer","renderChats","renderNewChatForm","newChatContainer","maxHeight","overflowX","borderRight","bottom","Person","removePerson","first_name","last_name","admin","renderPersonText","onRemovePerson","Option","PersonForm","others","addPerson","getOthers","getOtherPeople","marginBottom","PeopleList","collapsed","borderTop","LeftOutlined","collapseIcon","DownOutlined","renderChatPeople","right","container","image","objectFit","Photos","renderPhotos","Options","deleteChat","editChat","ChatSettings","left","topPeople","slice","renderOnePerson","renderTwoPeople","renderThreePeople","ChatSettingsContainer","settingsContainer","renderChatSettingsTop","renderPeopleSettings","renderPhotosSettings","renderOptionsSettings","filler","borderLeft","SigninForm","useState","user","setUser","secret","setSecret","firstName","setFirstName","lastName","setLastName","problem","setProblem","newUser","axios","post","headers","window","location","reload","isVisible","toggleModal","modal","querySelector","required","onInput","error","register","disabled","LoginForm","setUsername","password","setPassword","setError","authObject","get","localStorage","setItem","align","App","getItem","projectID","userSecret","renderChatFeed","chatAppProps","renderChatList","renderChatSetting","ReactDOM","render"],"mappings":"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","file":"static/js/main.6cd14db7.chunk.js","sourcesContent":["export function timeSinceDate(date) {\r\n    if (!date) return ''\r\n\r\n    //2021-02-13T19:35:56.797952Z\r\n\r\n    const day = date.substr(8,2) //desde la posición 8 recorta 2 = 13\r\n    const month = date.substr(5,2) //desde la posición 5 recorta 2 = 02\r\n    const year = date.substr(0,4) //desde la posición 0 recorta 4 = 2021\r\n\r\n    const hour = date.substr(11,2) //desde la posición 11 recorta 2 = 19\r\n    const minute = date.substr(14,2) //desde la posición 14 recorta 2 = 35\r\n    const second = date.substr(17,2) //desde la posición 17 recorta 2 = 56\r\n\r\n    var sent = new Date(`${month} ${day} ${year}`) //crea una nueva fecha\r\n    sent.setHours(hour) // establece las horas minutos y segundos\r\n    sent.setMinutes(minute)\r\n    sent.setSeconds(second)\r\n    sent = sent.toString() //convierte a string\r\n\r\n    const dayStr = sent.substr(0, 10) //de 0 a 10 es el dia\r\n    const timeStr = sent.substr(15, 6) //de 15 a 21 es la hora\r\n    return `${dayStr} at ${timeStr}` //devuelve Feb 12 2021 at 19:35:56\r\n}\r\n\r\nexport function daySinceSent(date) { //tiempo desde que fue enviado\r\n    if (!date) return ''\r\n    const day = date.substr(8,2)\r\n    const month = date.substr(5,2)\r\n    const year = date.substr(0,4)\r\n    const sent = new Date(`${month} ${day} ${year}`).toString()\r\n    return sent.substr(4, 6)\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nimport { timeSinceDate } from '../../Utilities/dateToString'\r\n\r\nexport default class Title extends Component {\r\n\r\n    render() {\r\n        const { chat } = this.props\r\n\r\n        if (!chat) { return <div /> }\r\n\r\n        return (\r\n            <div className=\"chat-title-container\">\r\n                <div className=\"chat-title\">\r\n                    <h2>{ chat && chat.title }</h2>\r\n                    <p>\r\n                        {\r\n                            chat.last_message.created && chat.last_message.created.length > 0 &&\r\n                            `Activo el ${timeSinceDate(chat.last_message.created)}`\r\n                        }\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react'\r\n\r\nexport default class AuthFail extends Component {\r\n    render() {\r\n        return (\r\n            <div style={{ height: '100%', textAlign: 'center' }}>\r\n                \r\n                <div style={{ width: '100%' }}>\r\n                    <img\r\n                        style={{ width: '40%', paddingTop: '25vh' }}\r\n                        src='https://chat-engine-assets.s3.amazonaws.com/denied.svg'\r\n                        alt='welcome-to-chat-engine'\r\n                    />\r\n                </div>\r\n\r\n                <div style={{ fontSize: '18px', paddingTop: '24px', width: '75%', paddingLeft: '12.5%' }}>\r\n                    Your credentials are incorrect. Make sure your Public Key, Username, and Password are correct at <a href='https://chatengine.io'>chatengine.io</a>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nimport { LoadingOutlined } from '@ant-design/icons'\r\n\r\nexport default class Loading extends Component {\r\n    render() {\r\n        return (\r\n            <LoadingOutlined \r\n                style={{ \r\n                    width: '100%', \r\n                    position: 'relative', \r\n                    top: 'calc(50% - 26px)', \r\n                    textAlign: 'center',\r\n                    fontSize: '52px'\r\n                }} \r\n            />\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Welcome extends Component {\r\n    render() {\r\n        return (\r\n            <div style={{ height: '100%', textAlign: 'center' }}>\r\n\r\n                <div style={{ width: '100%' }}>                    \r\n                    <img\r\n                        style={{ width: '60%', paddingTop: '33vh' }}\r\n                        src='https://chat-engine-assets.s3.amazonaws.com/welcome.svg'\r\n                        alt='welcome-to-chat-engine'\r\n                    />\r\n                </div>\r\n\r\n                <div style={{ fontSize: '18px', paddingTop: '24px', width: '75%', paddingLeft: '12.5%' }}>\r\n                    Fill out the \"New Chat\" form to get started.\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nconst months = ['Ene', 'Feb', 'Mar', 'Abr', 'May', 'Jun', 'Jul', 'Ago', 'Sep', 'Oct', 'Nov', 'Dic']\r\n\r\nexport default class DatePartition extends Component {\r\n    getDate(date) {\r\n        return date ? date.substr(0, 10) : null\r\n    }\r\n\r\n    formatDate(date_time) {\r\n        const year = date_time.substr(0, 4)\r\n        const monthIndex = parseInt(date_time.substr(5, 2)) - 1\r\n        const month = months[monthIndex]\r\n        const day = date_time.substr(8, 2)\r\n\r\n        var time = date_time.substr(11, 5)\r\n        var timeSuffix = ''\r\n\r\n        //si la hora es menor o igual a 12, conservar\r\n        if(parseInt(time.substr(0, 2)) >= 12){\r\n            //si la hora es mayor a 12, restar 12\r\n            //13hs - 12 = 1 pm\r\n            if(parseInt(time.substr(0, 2)) > 12){\r\n            time = String(parseInt(time.substr(0, 2)) - 12) + ':' + time.substr(3, 2)\r\n            }\r\n            timeSuffix = 'PM'\r\n\r\n        } else {\r\n            timeSuffix = 'AM'\r\n        }\r\n\r\n        return time + timeSuffix + ', ' + month + ' ' + day + ', ' + year\r\n    }\r\n\r\n    render() {\r\n        //las props traen la fecha del último mensaje enviado\r\n        //y la fecha del mensaje actual\r\n        const { lastCreated, created } = this.props\r\n\r\n        //sacamos el día de ambas fechas\r\n        const lastDate = this.getDate(lastCreated)\r\n        const thisDate = this.getDate(created)\r\n\r\n        //si el último mensaje fue hoy no hace falta mostrar fecha\r\n        if (lastCreated && lastDate === thisDate ) {\r\n            return <div />\r\n        }\r\n\r\n        //de otra manera, enviar un separador de fecha\r\n        return (\r\n            <div className='ce-message-date-text'>\r\n                { this.formatDate(created) }\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\n\r\nexport default class Thumbnail extends Component {\r\n\r\n    render() {\r\n        const { attachment } = this.props\r\n\r\n        return (\r\n            <img \r\n                className=\"thumbnail\"\r\n                src={attachment.file}\r\n                alt={'thumb-nail'}\r\n            />\r\n        )\r\n    }\r\n}","\r\n\r\nconst colors = [\r\n    '#D64045',\r\n    '#5B3000',\r\n    '#00CC99',\r\n    '#467599',\r\n    '#1D3354',\r\n    '#8F250C',\r\n    '#6153CC',\r\n    '#961D4E',\r\n    '#A29F15',\r\n    '#0CAADC',\r\n    '#FF5154',\r\n    '#FA7921',\r\n    '#688E26',\r\n    '#550527',\r\n    '#A10702',\r\n    '#FF1053',\r\n    '#6C6EA0',\r\n    '#100B00',\r\n]\r\n\r\nfunction stringToNumber(str){\r\n    let sum = 0\r\n    for (var i = 0; i < str.length; i++) {\r\n        sum = sum + (str.charCodeAt(i) * i) - 97\r\n    }\r\n    return sum\r\n}\r\n\r\nexport function stringToColor(str) {\r\n    if (!str) {\r\n        return 'black'\r\n    } else {\r\n        return colors[stringToNumber(str) % colors.length]\r\n    }\r\n}","import React, { Component } from 'react'\r\n\r\nimport { stringToColor } from '../../Utilities/colorMapping' \r\n\r\n\r\nexport default class Dot extends Component {\r\n    state = { avatar: '' }\r\n\r\n    updateImg() {\r\n        let { avatar } = this.props\r\n        //avatar es igual a \r\n        //si existe y es diferente que null = avatar, sino nada\r\n        avatar = avatar && avatar !== null ? avatar : ''\r\n        \r\n        if (avatar.split('?')[0] !== this.state.avatar.split('?')[0]) {\r\n            this.setState({ avatar })\r\n        }\r\n    }\r\n\r\n    componentDidMount() { this.updateImg() }\r\n\r\n    componentDidUpdate() { this.updateImg() }\r\n\r\n    render() {\r\n        const { username } = this.props\r\n        const color = stringToColor(username)\r\n        const customStyle = this.props.style ? this.props.style : {}\r\n        \r\n        return (\r\n            <div\r\n                className='ce-avatar-dot'\r\n                style={{\r\n                    ...styles.dot,\r\n                    ...customStyle,\r\n                    ...{\r\n                        backgroundColor: this.state.avatar ? 'white' : color,\r\n                        backgroundImage: this.state.avatar && `url(${this.state.avatar})`,\r\n                        backgroundRepeat: 'no-repeat',\r\n                        backgroundPosition: 'center',\r\n                        backgroundSize: '14px'\r\n                    }\r\n                }}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    dot: {\r\n        width: '13px',\r\n        height: '13px',\r\n        borderRadius: '13px',\r\n        textAlign: 'center',\r\n    }\r\n}","import React, { Component } from 'react'\r\n\r\nimport Thumbnail from './Thumbnail'\r\n\r\nimport Dot from '../../components/Avatar/Dot'\r\n\r\nimport { Row, Col, setConfiguration } from 'react-grid-system'\r\n\r\nsetConfiguration({ maxScreenClass: 'xl' })\r\n\r\nexport default class Message extends Component {\r\n    state = {\r\n        selected: false\r\n    }\r\n\r\n    renderReads() {\r\n        const { chat, message } = this.props\r\n\r\n        if(!chat) { return <div /> }\r\n\r\n        return chat.people.map((chatPerson, index) => {\r\n            if (message.id === chatPerson.last_read) {\r\n                return (\r\n                    <Dot \r\n                        key={`read_${index}`}\r\n                        avatar={chatPerson.person.avatar}\r\n                        username={chatPerson.person.username}\r\n                        style={{ float: 'right', marginLeft: '4px' }} \r\n                    />\r\n                )\r\n            }\r\n            return <div key={`read_${index}`} />\r\n        })\r\n    }\r\n\r\n    renderAttachments(borderRadius) {\r\n        const attachments = this.props.message ? this.props.message.attachments : []\r\n        return attachments.map((attachment, index) => {\r\n            return <Thumbnail attachment={attachment} key={`attachment_${index}`} borderRadius={borderRadius} />\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { lastMessage, message, nextMessage } = this.props\r\n\r\n        if (!message) { return <div /> }\r\n\r\n        const attachments = this.props.message && this.props.message.attachments\r\n\r\n        const topRightRadius = !lastMessage || lastMessage.sender_username !== message.sender_username ? '1.3em' : '0.3em'\r\n        const bottomRightRadius = !nextMessage || nextMessage.sender_username !== message.sender_username ? '1.3em' : '0.3em'\r\n\r\n        const borderRadius = `1.3em ${topRightRadius} ${bottomRightRadius} 1.3em`\r\n        const paddingBottom = !nextMessage || nextMessage.sender_username !== message.sender_username ? '12px' : '2px'\r\n\r\n        return (\r\n            <div \r\n                className='ce-message-row ce-my-message'\r\n                onMouseEnter={() => this.setState({ selected: true })}\r\n                onMouseLeave={() => this.setState({ selected: false })}\r\n                style={{ width: '100%', textAlign: 'right', paddingBottom }}\r\n            >\r\n\r\n                <div \r\n                    style={{ display: 'auto' }} \r\n                    className='ce-my-message-attachments-container'\r\n                >\r\n                    { this.renderAttachments() }\r\n                </div>\r\n\r\n                <Row\r\n                    style={{ paddingRight: '10px' }} \r\n                    className='ce-message-bubble-row ce-my-message-bubble-row'\r\n                >\r\n\r\n                    <Col xs={1} sm={2} md={3} />\r\n\r\n                    <Col xs={11} sm={10} md={9}>\r\n\r\n                        {\r\n                            !attachments || message.text && \r\n                            <div\r\n                                className='ce-message-bubble my-message'\r\n                                style={{ ...styles.myMessage, ...{ borderRadius } }}\r\n                            >\r\n                                { message.text }\r\n                            </div>\r\n                        }\r\n\r\n                    </Col>\r\n\r\n                    <Col xs={1} sm={2} md={3} />\r\n\r\n                    <Col xs={12} className='ce-reads-row ce-my-reads-row'>\r\n                        { this.renderReads() }\r\n                    </Col>\r\n            \r\n                </Row>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    myMessage: {\r\n        color: 'white', \r\n        cursor: 'pointer',\r\n        float: 'right', \r\n        textAlign: 'left', // Stay right but render text\r\n        padding: '12px',\r\n        fontSize: '15px',\r\n        whiteSpace: 'pre-line',\r\n        backgroundColor: 'rgb(24, 144, 255)', \r\n    }\r\n}","import React, { Component } from 'react'\r\n\r\nimport { stringToColor } from '../../Utilities/colorMapping' \r\n\r\n\r\nexport default class Avatar extends Component {\r\n    state = { avatar: '' }  \r\n\r\n    updateImg() {\r\n        let { avatar } = this.props\r\n        avatar = avatar && avatar !== null ? avatar : ''\r\n        \r\n        if (avatar.split('?')[0] !== this.state.avatar.split('?')[0]) {\r\n            this.setState({ avatar })\r\n        }\r\n    }\r\n\r\n    componentDidMount() { this.updateImg() }\r\n\r\n    componentDidUpdate() { this.updateImg() }\r\n\r\n    render() {\r\n        const { username, is_online } = this.props\r\n        const customStyle = this.props.style ? this.props.style : {}\r\n        const text = username ? username.substring(0, 2).toUpperCase() : ''\r\n        const color = stringToColor(username)    \r\n                \r\n        return (\r\n            <div style={{ width: '48px', height: '48px' }}>\r\n                <div style={{ height: '0px' }}>\r\n                    <div \r\n                        className='ce-avatar'\r\n                        style={{ \r\n                            ...styles.avatar, \r\n                            ...customStyle, \r\n                            ...{ \r\n                                backgroundColor: this.state.avatar ? 'white' : color,\r\n                                backgroundImage: this.state.avatar && `url(${this.state.avatar})`,\r\n                                backgroundRepeat: 'no-repeat',\r\n                                backgroundPosition: 'center',\r\n                                backgroundSize: '48px',\r\n                            }\r\n                        }}\r\n                    >   \r\n                        <div \r\n                            className='ce-avatar-text'\r\n                            style={styles.avatarText}\r\n                        >\r\n                            { !this.state.avatar && text }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {\r\n                    this.props.show_online !== false && \r\n                    <div\r\n                        className='ce-avatar-status'\r\n                        style={{\r\n                            ...styles.status, \r\n                            ...{ backgroundColor: is_online ? '#52c41a' : '#f5222d' }\r\n                        }}\r\n                    />\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    avatar: {\r\n        width: '44px',\r\n        height: '44px',\r\n        borderRadius: '22px',\r\n        color: 'white',\r\n        textAlign: 'center',\r\n    },\r\n    avatarText: {\r\n        color: 'white', \r\n        paddingTop: '12px', \r\n        fontSize: '15px', \r\n        fontWeight: '600'\r\n    },\r\n    status: { \r\n        width: '8px', \r\n        height: '8px', \r\n        borderRadius: '100%', \r\n        border: '2px solid white',   \r\n    }\r\n}","import React, { Component } from 'react'\r\n\r\nimport Thumbnail from './Thumbnail'\r\n\r\nimport { Avatar, Dot } from '../../components/Avatar'\r\n\r\nimport { Row, Col, setConfiguration } from 'react-grid-system'\r\n\r\nsetConfiguration({ maxScreenClass: 'xl' })\r\n\r\n\r\nexport default class TheirMessage extends Component {\r\n    state = {\r\n        selected: false\r\n    }\r\n\r\n    renderReads() {\r\n        const { chat, message } = this.props\r\n\r\n        if(!chat) { return <div /> }\r\n\r\n        return chat.people.map((person, index) => {\r\n            if (message.id === person.last_read) {\r\n                return (\r\n                    <Dot \r\n                        key={`read_${index}`}\r\n                        avatar={person.person.avatar}\r\n                        username={person.person.username}\r\n                        style={{ float: 'left', marginLeft: '4px' }}\r\n                    />\r\n                )\r\n            }\r\n            return <div key={`read_${index}`} />\r\n        })\r\n    }\r\n\r\n    renderAttachments(borderRadius) {\r\n        const attachments = this.props.message ? this.props.message.attachments : []\r\n        return attachments.map((attachment, index) => {\r\n            return <Thumbnail attachment={attachment} key={`attachment_${index}`} borderRadius={borderRadius} />\r\n        })\r\n    }\r\n\r\n    // renderPersonText(person) {\r\n    //     if (person.first_name !== null) {\r\n    //         return `${person.first_name}${person.last_name ? ` ${person.last_name}` : ''}`\r\n    //     } else {\r\n    //         return person.username\r\n    //     }\r\n    // }\r\n\r\n    render() {\r\n        const { lastMessage, message, nextMessage } = this.props\r\n\r\n        if (!message) { return <div /> }\r\n\r\n        const attachments = this.props.message && this.props.message.attachments\r\n\r\n        const topLeftRadius = !lastMessage || lastMessage.sender_username !== message.sender_username ? '1.3em' : '0.3em'\r\n        const bottomLeftRadius = !nextMessage || nextMessage.sender_username !== message.sender_username ? '1.3em' : '0.3em'\r\n\r\n        const borderRadius = `${topLeftRadius} 1.3em 1.3em ${bottomLeftRadius}`\r\n        const paddingBottom = !nextMessage || nextMessage.sender_username !== message.sender_username ? '12px' : '2px'\r\n\r\n        return (\r\n            <div \r\n                style={{ width: '100%', paddingBottom }}\r\n                className='ce-message-row ce-their-message'\r\n            >\r\n                {\r\n                    (!lastMessage || lastMessage.sender_username !== message.sender_username) &&\r\n                    <div style={styles.nameText} className='ce-their-message-sender'>\r\n                        { message.sender_username }\r\n                    </div>\r\n                }\r\n            \r\n                <Row style={{ paddingLeft: '2px' }} className='ce-their-message-row'>\r\n                    <Col xs={11} sm={10} md={9}>\r\n                        <div style={{ height: '0px' }} className='ce-their-message-avatar'>\r\n                            {\r\n                                (!nextMessage || nextMessage.sender_username !== message.sender_username) &&\r\n                                <Avatar\r\n                                    show_online={false}\r\n                                    username={message.sender_username}\r\n                                    avatar={message.sender && message.sender.avatar}\r\n                                />\r\n                            }\r\n\r\n                        </div>\r\n\r\n                        <div \r\n                            style={{ display: 'auto', paddingLeft: '50px' }}\r\n                            className='ce-their-message-attachments-container'\r\n                        >\r\n                            { this.renderAttachments() }\r\n                        </div>\r\n\r\n                        {\r\n                            !attachments || message.text &&\r\n                            <div style={{ paddingLeft: '48px' }}>\r\n                                <div\r\n                                    className='ce-message-bubble their-message'\r\n                                    onMouseEnter={() => this.setState({ selected: true })}\r\n                                    onMouseLeave={() => this.setState({ selected: false })}\r\n                                    style={{ ...styles.theirMessage, ...{ borderRadius } }}\r\n                                >\r\n                                    { message.text }\r\n                                </div>\r\n                            </div>  \r\n                        }\r\n                    </Col>\r\n\r\n                    {/* Col is 9 to not slipp into RHS */}\r\n                    <Col \r\n                        xs={9} \r\n                        style={{ marginLeft: '48px' }} \r\n                        className='ce-reads-row ce-their-reads-row'\r\n                    >\r\n                        { this.renderReads() }\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    theirMessage: {\r\n        cusor: 'auto',\r\n        color: 'black', \r\n        float: 'left',\r\n        padding: '12px',\r\n        fontSize: '15px',\r\n        whiteSpace: 'pre-line',\r\n        backgroundColor: '#f1f0f0', \r\n    },\r\n    nameText: { \r\n        paddingLeft: '62px', \r\n        paddingBottom: '2px', \r\n        color: 'rgba(0, 0, 0, .40)', \r\n        fontSize: '15px' \r\n    }\r\n}","import React, { Component } from 'react'\r\n\r\nimport DatePartition from './DatePartition'\r\nimport MyMessage from './MyMessage'\r\nimport TheirMessage from './TheirMessage'\r\n\r\nexport default class Message extends Component {\r\n    state = {\r\n        selected: false\r\n    }\r\n\r\n    render() {\r\n        const { creds, chat, lastMessage, message, nextMessage } = this.props\r\n\r\n        if (!message) { return <div /> }\r\n\r\n        return (\r\n            <div className='ce-message-and-date'>\r\n                <DatePartition \r\n                    lastCreated={lastMessage ? lastMessage.created : null} \r\n                    created={message.created} \r\n                />\r\n\r\n                {\r\n                    message.sender_username === creds.userName ?\r\n                    <MyMessage \r\n                        chat={chat} \r\n                        creds={creds} \r\n                        lastMessage={lastMessage} \r\n                        message={message} \r\n                        nextMessage={nextMessage} \r\n                    /> :\r\n                    <TheirMessage \r\n                        chat={chat} \r\n                        creds={creds} \r\n                        lastMessage={lastMessage} \r\n                        message={message} \r\n                        nextMessage={nextMessage} \r\n                    />\r\n                }\r\n            </div>\r\n        ) \r\n    }\r\n}\r\n","import React from 'react'\r\n\r\nimport { CloseCircleTwoTone } from '@ant-design/icons'\r\n\r\nexport default class FileRow extends React.Component {\r\n    state = {\r\n        hovered: false\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div \r\n                className=\"thumbnail-container\"\r\n                onMouseEnter={() => this.setState({ hovered: true })}\r\n                onMouseLeave={() => this.setState({ hovered: false })}\r\n            >\r\n                \r\n                <img\r\n                    className=\"image-square\"\r\n                    alt={this.props.file ? this.props.file.name : ''}\r\n                    src={URL.createObjectURL(this.props.file)}\r\n                />\r\n\r\n                {\r\n                    this.state.hovered &&\r\n                    <CloseCircleTwoTone \r\n                        className=\"close-icon\" \r\n                        onClick={() => this.props.onRemove && this.props.onRemove()}\r\n                    />\r\n                }\r\n\r\n            </div>\r\n        ) ;\r\n    }\r\n}","import React from 'react'\r\n\r\nimport Thumbnail from './Thumbnail'\r\n\r\nexport default class FileRow extends React.Component {\r\n    renderFiles() {\r\n        return this.props.files.map((file, index) => {\r\n            return (\r\n                <Thumbnail \r\n                    file={file} \r\n                    key={`thumb_${index}`} \r\n                    onRemove={() => this.props.onRemove && this.props.onRemove(index)}\r\n                />\r\n            )\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{ width: 'calc(100% - 24px)', paddingLeft: '12px' }}>\r\n                { this.renderFiles() }\r\n            </div>\r\n    ) ;\r\n    }\r\n}","import React from 'react';\r\n\r\nexport default class ImagesInput extends React.Component {\r\n    state = {\r\n        files: []\r\n    }\r\n\r\n    onSelect(event) {\r\n        let files = []\r\n        const indexes = [...Array(event.target.files.length).keys()]\r\n\r\n        indexes.map((i, index) => {\r\n            const file = event.target.files[index]\r\n            if (file) { files.push(file) }\r\n        })\r\n        \r\n        this.props.onSelectFiles &&  this.props.onSelectFiles(files)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form\r\n                encType=\"multipart/form-data\"\r\n                style={{ height: '0px', display: 'none' }}\r\n            >\r\n\r\n                <input\r\n                    type=\"file\"\r\n                    id=\"files\"\r\n                    accept=\"image/x-png,image/gif,image/jpeg\"\r\n                    style={{ display: 'none' }}\r\n                    onChange={(e) => this.onSelect(e)} \r\n                    multiple\r\n                />\r\n\r\n            </form>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class TextInput extends Component {\r\n    state = {\r\n        focused: false,\r\n        value: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        const value = this.props.default\r\n        if(value) {\r\n            const event = {target: {value}}\r\n            this.props.handleChange(event)\r\n            this.setState({ value })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const customStyle = this.props.style ? this.props.style : {}\r\n        const defaultStyle = this.state.focused ? styles.focusInput : styles.input\r\n\r\n        return (\r\n            // NOTE: You may need to make a div the searchContainer to put icons in...\r\n            <input \r\n                className='ce-input ce-text-input'\r\n                value={this.props.value} \r\n                placeholder={this.props.label}\r\n                style={{ ...defaultStyle, ...customStyle }}\r\n                onBlur={() => this.setState({ focused: false })}\r\n                onFocus={() => this.setState({ focused: true })}\r\n                type={this.props.type ? this.props.type : \"text\" }\r\n                onChange={(e) => this.props.handleChange && this.props.handleChange(e)} \r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    input: {\r\n        // Sizes\r\n        height: '36px',\r\n        fontSize: '15px',\r\n        // Border\r\n        outline: 'none',\r\n        borderRadius: '24px',\r\n        border: '1px solid #d9d9d9',\r\n        // Padding and fixed width\r\n        padding: '0px 12px',\r\n        boxSizing: 'border-box',\r\n    },\r\n    focusInput: {\r\n        // Sizes\r\n        height: '36px',\r\n        fontSize: '15px',\r\n        // Border\r\n        outline: 'none',\r\n        borderRadius: '24px',\r\n        border: '1px solid #1890ff',\r\n        // Padding and fixed width\r\n        padding: '0px 12px',\r\n        boxSizing: 'border-box',\r\n    }\r\n}","import React, { Component } from 'react'\r\n\r\nexport default class TextAreaInput extends Component {\r\n    state = {\r\n        focused: false,\r\n        value: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        const value = this.props.default\r\n\r\n        if(value) {\r\n            this.props.handleChange({ target: { value } })\r\n            this.setState({ value })\r\n        }\r\n    }\r\n\r\n    resize() {\r\n        var textarea = document.getElementById(\"msg-textarea\");\r\n        textarea.style.height = \"\";\r\n        textarea.style.height = Math.min(textarea.scrollHeight, 150) + \"px\";\r\n    }\r\n\r\n    normalize() {\r\n        var textarea = document.getElementById(\"msg-textarea\");\r\n        textarea.style.height = \"\";\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.resize()\r\n    }\r\n\r\n    handleChange(e) {\r\n        this.resize()\r\n        this.props.handleChange && this.props.handleChange(e)\r\n    }\r\n\r\n    onKeyDown(e) {\r\n        if (e.key === 'Enter') { \r\n            e.preventDefault()\r\n            this.normalize()\r\n\r\n            if (this.props.value.length > 0) {\r\n                this.props.onSubmit && this.props.onSubmit(e) \r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <textarea \r\n                id='msg-textarea'\r\n                className='textarea-input'\r\n                rows='1'\r\n                value={ this.props.value }\r\n                placeholder={ this.props.label }\r\n                onBlur={() => this.setState({ focused: false })}\r\n                onFocus={() => this.setState({ focused: true })}\r\n                type={this.props.type ? this.props.type : \"text\" }\r\n                onChange={(e) => this.handleChange(e)} \r\n                onKeyDown={(e) => this.onKeyDown(e)}\r\n            />\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\n\r\nimport { CloseOutlined } from '@ant-design/icons'\r\n\r\nexport default class AutoComplete extends Component {\r\n    state = {\r\n        focused: false,\r\n        showAll: false,\r\n    }\r\n\r\n    onFocus() {\r\n        this.onChange('', true)\r\n        this.setState({ focused: true })\r\n        this.props.onFocus && this.props.onFocus()\r\n    }\r\n\r\n    onBlur() {\r\n        this.setState({ focused: false })\r\n        this.props.onBlur && this.props.onBlur()\r\n    }\r\n\r\n    onChange(value, showAll) {\r\n        this.setState({ showAll })\r\n        this.props.handleChange && this.props.handleChange(value)\r\n    }\r\n\r\n    getNames() {\r\n        let count = 0\r\n        const max = this.props.max ? this.props.max : 3\r\n        \r\n        const results = []\r\n\r\n        this.props.options.map(option => {\r\n            if (JSON.stringify(option).toLowerCase().indexOf(this.props.value.toLowerCase()) !== -1 && count < max) {\r\n                count = count + 1\r\n                results.push(option)\r\n            }\r\n        })\r\n        \r\n        return results\r\n    }\r\n\r\n\r\n    renderOptions() {\r\n        if(!this.props.value && !this.state.showAll) { return <div /> }\r\n\r\n        const results = this.getNames()\r\n\r\n        return results.map((option, index) => {\r\n            return (\r\n                <div key={`option_${index}`} className='ce-autocomplete-option'>\r\n                    { this.props.renderOption && this.props.renderOption(option) }\r\n\r\n                    { \r\n                        index === results.length - 1 && \r\n                        <div \r\n                            style={styles.close} \r\n                            className='ce-autocomplete-close'\r\n                            onClick={() => this.onChange('', false)}\r\n                        >\r\n                            <CloseOutlined />\r\n                        </div>\r\n                    }\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { options } = this.props\r\n        const customStyle = this.props.style ? this.props.style : {}\r\n        const defaultStyle = { ...styles.input, ...{ border: this.state.focused ? '1px solid #1890ff' : '1px solid #d9d9d9' } }\r\n\r\n        return (\r\n            <div>\r\n                <input \r\n                    className='ce-input ce-autocomplete-input'\r\n                    value={this.props.value} \r\n                    placeholder={this.props.label}\r\n                    style={{ ...defaultStyle, ...customStyle }}\r\n                    type={this.props.type ? this.props.type : \"text\" }\r\n                    onBlur={() => this.onBlur()}\r\n                    onFocus={() => this.onFocus()}\r\n                    onChange={(e) => this.onChange(e.target.value, true)}\r\n                />\r\n\r\n                {\r\n                    options && options.length > 0 && this.state.showAll &&\r\n                    <div \r\n                        className='ce-autocomplete-options'\r\n                        style={{ borderRadius: '19px', border: '1px solid #afafaf', overflow: 'hidden' }}\r\n                    >\r\n                        { this.props.options && this.renderOptions() }\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    input: {\r\n        height: '36px',\r\n        fontSize: '15px',\r\n        outline: 'none',\r\n        borderRadius: '24px',\r\n        padding: '0px 12px',\r\n        boxSizing: 'border-box'\r\n    },\r\n    close: {\r\n        cursor: 'pointer',\r\n        textAlign: 'center',\r\n        padding: '8px 12px',\r\n        fontSize: '15px',\r\n        borderRadius: '24px',\r\n    }\r\n}","import React from 'react';\r\n\r\nimport { sendMessage, isTyping } from 'react-chat-engine'\r\nimport { FaPaperPlane, FaImage } from 'react-icons/fa'\r\n\r\nimport FileRow from './FileRow'\r\nimport ImagesInput from './ImagesInput'\r\nimport { TextAreaInput } from '../../components/Input'\r\n\r\nexport default class MessageForm extends React.Component {\r\n    state = {\r\n      value: '',\r\n      files: []\r\n    }\r\n\r\n    onRemove(index) {\r\n      let { files } = this.state \r\n      files.splice(index, 1)\r\n      this.setState({ files })\r\n    }\r\n  \r\n    handleChange(event) {\r\n      this.setState({value: event.target.value});\r\n\r\n      isTyping(this.props.creds, this.props.chatId)\r\n    }\r\n  \r\n    handleSubmit(event) {\r\n      event.preventDefault();\r\n\r\n      const { files } = this.state\r\n      const text = this.state.value.trim()\r\n\r\n      if (text.length > 0 || files.length > 0) {\r\n        sendMessage(\r\n          this.props.creds, \r\n          this.props.chatId, \r\n          { text, files },\r\n          (data) => {}\r\n        )\r\n      }\r\n\r\n      this.setState({ value: '', files: [] })\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <div \r\n          className='message-form-container'\r\n        >\r\n\r\n          <FileRow files={this.state.files} onRemove={(i) => this.onRemove(i)} />\r\n          <div className=\"message-form-grid\">\r\n            <ImagesInput onSelectFiles={(files) => this.setState({ files })} />\r\n            \r\n\r\n            <label htmlFor=\"files\" className=\"image-button\">\r\n              <FaImage className=\"picture-icon\" />\r\n            </label>\r\n\r\n            <form onSubmit={this.handleSubmit.bind(this)} id=\"send-message\">\r\n                <TextAreaInput\r\n                  value={this.state.value}\r\n                  label='Escribe un mensaje...'\r\n                  handleChange={this.handleChange.bind(this)}\r\n                  onSubmit={this.handleSubmit.bind(this)}\r\n                />\r\n            </form>\r\n\r\n            <button type=\"submit\" id=\"submit-button\" className=\"send-button\" form=\"send-message\">\r\n              <FaPaperPlane className=\"send-icon\" />\r\n            </button>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n}","import React, { Component } from 'react'\r\n\r\nimport Title from './TitleSection'\r\nimport { Loading, AuthFail, Welcome } from './Steps'\r\n\r\nimport Message from './Message'\r\nimport MessageForm from './MessageForm'\r\n\r\nimport _ from 'lodash'\r\n\r\nimport { stringToColor } from '../Utilities/colorMapping'\r\n\r\nexport default class ChatFeed extends Component {\r\n    state = {\r\n        duration: 0\r\n    }\r\n\r\n    componentDidMount() {\r\n        setTimeout(() => {\r\n            this.setState({ duration: 100 })\r\n        }, 3000); // Once the chat loads, start animating\r\n    }\r\n\r\n    renderTypers() {\r\n        const { typingData, activeChat } = this.props\r\n        const typers = typingData && typingData[activeChat] \r\n                    ? typingData[activeChat] : []\r\n\r\n        return typers.map((typer, index) => {\r\n            return (\r\n                <div \r\n                    key={`typer_${index}`} \r\n                    style={{ color: stringToColor(typer), padding: '2px', paddingLeft: '12px' }}\r\n                >\r\n                    {`${typer} está escribiendo...`}\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    scrollDown() {\r\n        var feed = document.getElementById('chat-feed');\r\n        feed.scrollTop = feed.scrollHeight;\r\n    }\r\n\r\n    renderMessages() {\r\n        const { messages, chats, activeChat } = this.props\r\n        const chat = chats && chats[activeChat]\r\n        const keys = Object.keys(messages)\r\n\r\n        return keys.map((key, index) => {\r\n            const message = messages[key]\r\n            const lastMessageKey = index === 0 ? null : keys[index - 1]\r\n            const nextMessageKey = index === keys.length - 1 ? null : keys[index + 1]\r\n            \r\n            return (\r\n                <Message \r\n                    key={`message_${index}`}\r\n                    creds={this.props}\r\n                    chat={chat}\r\n                    message={message}\r\n                    lastMessage={messages[lastMessageKey]}\r\n                    nextMessage={messages[nextMessageKey]}\r\n                />\r\n            )\r\n        })\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if(!_.isEmpty(this.props.messages)) {\r\n            this.scrollDown()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { chats, creds, activeChat } = this.props\r\n        const chat = chats && chats[activeChat] \r\n\r\n        if(creds === null) { \r\n            return <Loading />\r\n        }\r\n\r\n        if(creds === undefined) {\r\n            return <AuthFail />\r\n        }\r\n\r\n        if(creds && chats !== null && _.isEmpty(chats)) {\r\n            return <Welcome />\r\n        }\r\n\r\n        return (\r\n            <div className=\"chat-feed-container\">\r\n                <Title chat={chat} />\r\n\r\n                <div className=\"chat-message-container\" id=\"chat-feed\">\r\n                    { this.renderMessages() }\r\n\r\n                    { this.renderTypers() }\r\n                </div>\r\n\r\n                <MessageForm creds={this.props} chatId={activeChat} />\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\n\r\nimport { PlusOutlined, ArrowUpOutlined, DeleteOutlined, UserAddOutlined } from '@ant-design/icons'\r\n\r\nexport default class Button extends Component {\r\n    state = {\r\n        hovered: false\r\n    }\r\n\r\n    render() {\r\n        const { value, icon, theme, style } = this.props\r\n\r\n        const customStyle = style ? style : {}\r\n        const hoverStyle = this.state.hovered ? styles.hoverButton : {}\r\n        const themeStyle = theme === 'danger' ? styles.dangerButton : styles.button\r\n\r\n        return (\r\n            <button \r\n                type={this.props.type}\r\n                onClick={() => this.props.onClick && this.props.onClick()}\r\n                onMouseEnter={() => this.setState({ hovered: true })}\r\n                onMouseLeave={() => this.setState({ hovered: false })}\r\n                style={{ ...themeStyle, ...customStyle, ...hoverStyle }}\r\n                className={`ce-primary-button ${theme === 'danger' ? 'ce-danger-button' : ''}`}\r\n            >\r\n\r\n                { icon === 'plus' && <PlusOutlined /> }\r\n                { icon === 'send'  && <ArrowUpOutlined /> }\r\n                { icon === 'delete'  && <DeleteOutlined /> }\r\n                { icon === 'user-add'  && <UserAddOutlined /> }\r\n\r\n                { value && icon ? ` ${value}` : value}  \r\n\r\n            </button>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    button: {\r\n        color: 'white',\r\n        border: 'none',\r\n        outline: 'none',\r\n        height: '36px',\r\n        fontSize: '15px',\r\n        cursor: 'pointer',\r\n        padding: '8px 16px',\r\n        borderRadius: '33px',\r\n        backgroundColor: '#1890ff'\r\n    },\r\n    dangerButton: {\r\n        color: 'red',\r\n        border: 'none',\r\n        outline: 'none',\r\n        height: '36px',\r\n        fontSize: '15px',\r\n        cursor: 'pointer',\r\n        padding: '8px 16px',\r\n        borderRadius: '33px',\r\n        backgroundColor: 'white',\r\n        border: '1px solid red',\r\n    },\r\n    hoverButton: {\r\n        opacity: '0.66'\r\n    }\r\n}","import React from 'react';\r\n\r\nimport { newChat } from 'react-chat-engine'\r\n\r\nimport { Button } from '../../components/Button'\r\nimport { TextInput } from '../../components/Input'\r\n\r\nexport default class ChatForm extends React.Component {\r\n    state = {\r\n        value: ''\r\n    }\r\n  \r\n    handleChange(event) {\r\n      this.setState({value: event.target.value});\r\n    }\r\n  \r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n\r\n        if (this.state.value.trim().length > 0) {\r\n          newChat(\r\n            this.props.creds, \r\n            { title: this.state.value },\r\n            () => {}\r\n          )\r\n        }\r\n\r\n        this.setState({ value: '' })\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <form onSubmit={this.handleSubmit.bind(this)}>\r\n          <div style={{ height: '1px' }}>\r\n            <TextInput \r\n              label='New Chat'\r\n              value={this.state.value}\r\n              style={{ width: 'calc(100% - 48px)' }}\r\n              handleChange={(e) => this.handleChange(e)}\r\n            />\r\n          </div>\r\n\r\n          <div style={{ width: '100%', textAlign: 'right' }}>\r\n            <Button \r\n              icon='plus'\r\n              type=\"submit\" \r\n            />\r\n          </div>\r\n        </form>\r\n      );\r\n    }\r\n}","import React, { Component } from 'react'\r\n\r\nimport _ from 'lodash'\r\n\r\nimport { daySinceSent } from '../Utilities/dateToString'\r\n\r\nimport ChatForm from './ChatForm'\r\n\r\nclass ChatList extends Component {\r\n    //se crea la función que dice si leyo el ultimo mensaje\r\n    readLastMessage(creds, chat) { //recibe las credes y el chat\r\n        let readLastMessage = true //comienza en true\r\n        //recorremos la gente dentro del chat\r\n        chat.people.map(chat_person => { \r\n            // si las credenciales y el username de las credenciales es igual a al del chat\r\n            if(creds && creds.userName === chat_person.person.username) {\r\n                //se establece si es true o false segun la comparacion\r\n                readLastMessage = chat.last_message.id === chat_person.last_read\r\n                //si el id del ultimo mensaje es igual al ultimo mensaje leido de la persona \r\n            }\r\n        })\r\n        return readLastMessage //devuelve un boolean\r\n    }\r\n\r\n    //para renderizar los chats debe recibir los chats como props\r\n    renderChats(chats) {\r\n        return chats.map((chat, index) => {\r\n            if (!chat) return <div key={`chat_${index}`} />\r\n\r\n            const extraStyle = this.props.activeChat === chat.id ? styles.activeChat : {}\r\n            \r\n            if (this.props.renderChatCard) {\r\n                return <div key={`chat_${index}`}>{this.props.renderChatCard(chat, index)}</div>\r\n            }\r\n\r\n            let lastMessage = chat.last_message.text\r\n            if (!lastMessage) {\r\n                lastMessage = chat.last_message.attachments.length > 0 ?\r\n                `${chat.last_message.attachments.length} image${chat.last_message.attachments.length > 1 ? 's' : ''}` :\r\n                'Say hello!'\r\n            }\r\n\r\n            return (\r\n                <div \r\n                    key={`chat_${index}`} \r\n                    onClick={() => this.props.onChatClick(chat.id)}\r\n                    style={{ ...styles.chatContainer, ...extraStyle }}\r\n                    className={`ce-chat-card ${this.props.activeChat === chat.id && 'ce-active-chat-card'}`}\r\n                >\r\n                    \r\n                    <div style={ styles.titleText } className='ce-chat-title-text'>\r\n                        { chat.title }\r\n                        {' '}\r\n                        {\r\n                            !this.readLastMessage(this.props, chat) &&\r\n                            <div \r\n                                className='ce-chat-unread-dot'\r\n                                style={{ \r\n                                    float: 'right',\r\n                                    width: '12px',\r\n                                    height: '12px',\r\n                                    borderRadius: '6px',\r\n                                    backgroundColor: '#1890ff',\r\n                                    display: 'inline-block'\r\n                                }} \r\n                            />\r\n                        }\r\n                        \r\n                    </div>\r\n\r\n                    <div style={{ width: '100%' }} className='ce-chat-subtitle'>\r\n                        <div style={styles.messageText} className='ce-chat-subtitle-text ce-chat-subtitle-message'>\r\n                            { lastMessage }\r\n                        </div>\r\n\r\n                        <div \r\n                            className='ce-chat-subtitle-text ce-chat-subtitle-date'\r\n                            style={{ ...styles.messageText, ...{ textAlign: 'right', width: '25%' } }}\r\n                        >\r\n                            { daySinceSent(chat.last_message.created) }\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    render() {       \r\n        const chats = this.props.chats ? Object.values(this.props.chats) : []\r\n        chats.sort((a, b) => { \r\n            const aDate = a.last_message.created ? new Date(a.last_message.created) : new Date()\r\n            const bDate = b.last_message.created ? new Date(b.last_message.created) : new Date()\r\n            return new Date(bDate) - new Date(aDate); \r\n        })\r\n\r\n        return (\r\n            <div style={styles.chatListContainer} className='ce-chat-list'>\r\n\r\n                <div style={styles.chatsContainer} className='ce-chats-container'>\r\n\r\n                    { this.renderChats(chats) } \r\n\r\n                    <div style={{ height: '64px' }} />\r\n\r\n                    {\r\n                        this.props.renderNewChatForm ?\r\n                        this.props.renderNewChatForm(this.props) :\r\n                        <div style={styles.newChatContainer} className='ce-chat-form-container'>\r\n                            <ChatForm creds={this.props}  className='ce-chat-form' />\r\n                        </div>\r\n                    }\r\n                    \r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles={\r\n    chatListContainer: { \r\n        height: '100%', \r\n        maxHeight: '100vh', \r\n        overflow: 'scroll', \r\n        overflowX: 'hidden',\r\n        borderRight: '1px solid #afafaf', \r\n        backgroundColor: 'white' \r\n    },\r\n    chatsContainer: { \r\n        width: '100%', \r\n        backgroundColor: 'white', \r\n        borderRadius: '0px 0px 24px 24px'\r\n    },\r\n    chatContainer: { \r\n        padding: '16px', \r\n        paddingBottom: '12px',\r\n        cursor: 'pointer'\r\n    },\r\n    titleText: { \r\n        fontWeight: '500',\r\n        paddingBottom: '4px', \r\n        whiteSpace: 'nowrap', \r\n        overflow: 'hidden' \r\n    },\r\n    messageText: {\r\n        width: '75%',\r\n        color: 'rgba(153, 153, 153, 1)', \r\n        fontSize: '14px', \r\n        whiteSpace: 'nowrap', \r\n        overflow: 'hidden',\r\n        display: 'inline-block'\r\n    },\r\n    activeChat: {\r\n        backgroundColor: '#d9d9d9',\r\n        border: '4px solid white',\r\n        borderRadius: '12px'\r\n    },\r\n    newChatContainer: { \r\n        position: 'absolute', \r\n        bottom: '0px', \r\n        padding: '12px',\r\n        width: 'calc(100% - 25px)',\r\n        backgroundColor: 'white'\r\n    }\r\n}\r\n\r\nexport default ChatList;\r\n","import React, { Component } from 'react'\r\n\r\nimport { removePerson } from 'react-chat-engine'\r\n\r\nimport { Avatar } from '../../components/Avatar'\r\nimport { Button } from \"../../components/Button\"\r\n\r\nexport default class Person extends Component {\r\n    state = {\r\n        selected: false\r\n    }\r\n\r\n    onRemovePerson() {\r\n        removePerson(\r\n            this.props.creds,\r\n            this.props.chat.id,\r\n            this.props.person.username\r\n        )\r\n    }\r\n\r\n    renderPersonText(person) {\r\n        if (person.first_name !== null) {\r\n            return `${person.first_name}${person.last_name ? ` ${person.last_name}` : ''}`\r\n        } else {\r\n            return person.username\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { person, chat, creds } = this.props\r\n\r\n        if (!person || !chat) { return <div /> }\r\n\r\n        const { admin } = chat\r\n\r\n        return (\r\n            <div \r\n                className='ce-person-container'\r\n                onMouseEnter={() => this.setState({ selected: true })}\r\n                onMouseLeave={() => this.setState({ selected: false })}\r\n            >\r\n                <div \r\n                    className='ce-person-avatar'\r\n                    style={{ padding: '2px', height: '0px' }}\r\n                >\r\n                    <Avatar \r\n                        avatar={person.avatar} \r\n                        username={person.username} \r\n                        is_online={person.is_online}\r\n                    />\r\n                </div>\r\n\r\n                <div\r\n                    className='ce-person-text'\r\n                    style={{ paddingLeft: '52px', height: '44px', position: 'relative', top: '10px', fontSize: '15px' }}\r\n                >\r\n                    { this.renderPersonText(person) }\r\n                </div>\r\n\r\n                {\r\n                    this.state.selected && (creds.userName === admin.username) && (person.username !== admin.username) &&\r\n                    <div\r\n                        className='ce-delete-chat' \r\n                        style={{ float: 'right', height: '0px', position: 'relative', bottom: '44px'}}\r\n                    >\r\n                        <Button \r\n                            theme='danger'\r\n                            icon='delete'\r\n                            onClick={() => this.onRemovePerson()}\r\n                        />\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nimport { Avatar } from '../../../components/Avatar'\r\n\r\n\r\nexport default class Option extends React.Component {\r\n    state = {\r\n        focused: false\r\n    }\r\n\r\n    render() {\r\n        const { avatar, username } = this.props.person \r\n\r\n        return (\r\n            <div \r\n                onMouseEnter={() => this.setState({ focused: true })}\r\n                onMouseLeave={() => this.setState({ focused: false })}\r\n                onClick={() => this.props.onClick && this.props.onClick()}\r\n                style={{ ...styles.option, ...{ backgroundColor: this.state.focused ? '#f5f5f5' : 'white'} }}\r\n            >\r\n                <div>\r\n                    <Avatar username={username} avatar={avatar} />\r\n                </div>\r\n\r\n                <div style={{ display: 'flex', padding: '12px 4px' }}>\r\n                    {this.props.person.username}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = {\r\n  option: {\r\n    padding: '4px 16px',\r\n    cursor: 'pointer',\r\n    fontSize: '15px',\r\n    display: 'flex'\r\n  },\r\n}","import React from 'react';\r\n\r\nimport { addPerson, getOtherPeople } from 'react-chat-engine'\r\n\r\nimport { AutoCompleteInput } from '../../../components/Input'\r\n\r\nimport Option from './Option'\r\n\r\nexport default class PersonForm extends React.Component {\r\n  state = {\r\n    value: '',\r\n    others: []\r\n  }\r\n\r\n  handleChange(value) {\r\n    this.setState({ value });\r\n  }\r\n\r\n  addPerson(name) {\r\n    addPerson(\r\n      this.props.creds,\r\n      this.props.chat.id,\r\n      name,\r\n      () => { \r\n        this.setState({ value: '' }); \r\n        this.getOthers(); \r\n      }\r\n    )\r\n  }\r\n\r\n  getOthers() {\r\n    getOtherPeople(\r\n      this.props.creds,\r\n      this.props.chat.id,\r\n      (id, others) => this.setState({ others }),\r\n      () => {},\r\n    )\r\n  }\r\n\r\n  renderOption(option) {\r\n    return <Option person={option} onClick={() => this.addPerson(option.username)} />\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ marginBottom: '12px' }}>\r\n        <AutoCompleteInput \r\n          style={{ width: '100%' }}\r\n          label='Type a username'\r\n          value={this.state.value}\r\n          options={this.state.others}\r\n          onFocus={() => this.getOthers()}\r\n          handleChange={(value) => this.handleChange(value)} \r\n          renderOption={(option) => this.renderOption(option)}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nimport Person from './Person'\r\nimport PersonForm from './PersonForm'\r\n\r\nimport { LeftOutlined, DownOutlined } from '@ant-design/icons'\r\n\r\nexport default class PeopleList extends React.Component {\r\n    state = {\r\n        collapsed: false,\r\n        hovered: false\r\n    }\r\n\r\n    renderChatPeople(people) {\r\n        return people.map((chatPerson, index) => {\r\n            return (\r\n                <Person \r\n                    key={`person_${index}`} \r\n                    person={chatPerson.person}\r\n                    creds={this.props.creds} \r\n                    chat={this.props.chat} \r\n                />\r\n            )\r\n        })\r\n    }\r\n  \r\n    render() {\r\n        const { creds, chat } = this.props \r\n\r\n        if (!chat) { return <div /> }\r\n\r\n        return (\r\n            <div style={{ borderTop: '1px solid #f0f0f0' }}>\r\n                <div \r\n                    onMouseEnter={() => this.setState({ hovered: true })}\r\n                    onMouseLeave={() => this.setState({ hovered: false })}\r\n                    onClick={() => this.setState({ collapsed: !this.state.collapsed })}\r\n                    style={this.state.hovered ? { backgroundColor: '#f0f0f0', cursor: 'pointer' } : {}}\r\n                    className='ce-section-title-container ce-person-title-container'\r\n                >\r\n                    <div\r\n                        className='ce-section-title ce-people-title'\r\n                        style={{ fontSize: '17px', padding: '12px', fontWeight: '600' }}>\r\n                        People\r\n                    </div>\r\n\r\n                    {\r\n                        this.state.collapsed ?\r\n                        <LeftOutlined style={styles.collapseIcon} /> :\r\n                        <DownOutlined style={styles.collapseIcon} />\r\n                    }\r\n                </div>\r\n\r\n                {\r\n                    !this.state.collapsed &&\r\n                    <div>\r\n                        <div style={{ height: '12px' }} />\r\n\r\n                        { this.renderChatPeople(chat.people) }\r\n\r\n                        <div style={{ height: '12px' }} />\r\n\r\n                        {\r\n                            creds && chat && creds.userName === chat.admin.username &&\r\n                            <PersonForm creds={creds} chat={chat} />\r\n                        }\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    collapseIcon: {\r\n        float: 'right',\r\n        position: 'relative',\r\n        bottom: '30px',\r\n        right: '12px'\r\n    }\r\n}","import React from 'react'\r\n\r\nexport default class Thumbnail extends React.Component {\r\n    render() {\r\n        const { attachment } = this.props \r\n\r\n        if (!attachment) { return <div /> }\r\n\r\n        return (\r\n            <div style={styles.container} className='ce-photo-thumbnail'>\r\n                \r\n                <div style={{ paddingTop: '100%' }} />\r\n                \r\n                <img\r\n                    alt={attachment.id}\r\n                    style={styles.image}\r\n                    src={attachment.file}\r\n                    className='ce-photo-img'\r\n                    id={`image-${attachment.id}`}\r\n                />\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    container: { \r\n        position: 'relative', \r\n        width: 'calc(33% - 8px)', \r\n        border: '1px solid white', \r\n        display: 'inline-block',\r\n        cursor: 'pointer'\r\n    },\r\n    image: {\r\n        top: '0px', \r\n        width: '100%', \r\n        height: '100%',\r\n        position: 'absolute',\r\n        objectFit: 'cover'\r\n    }\r\n}","import React from 'react'\r\n\r\nimport Thumbnail from './Thumbnail'\r\n\r\nimport { LeftOutlined, DownOutlined } from '@ant-design/icons'\r\n\r\nexport default class Photos extends React.Component {\r\n    state = {\r\n        collapsed: true,\r\n        hovered: false\r\n    }\r\n\r\n    renderPhotos(attachments) {\r\n        return attachments.map((attachment, index) => {\r\n            return <Thumbnail key={`person_${index}`} attachment={attachment} />\r\n        })\r\n    }\r\n  \r\n    render() {\r\n        const { chat } = this.props \r\n\r\n        if (!chat) { return <div /> }\r\n\r\n        return (\r\n            <div style={{ borderTop: '1px solid #f0f0f0' }} className='ce-photo-section'>\r\n                <div \r\n                    onMouseEnter={() => this.setState({ hovered: true })}\r\n                    onMouseLeave={() => this.setState({ hovered: false })}\r\n                    onClick={() => this.setState({ collapsed: !this.state.collapsed })}\r\n                    style={this.state.hovered ? { backgroundColor: '#f0f0f0', cursor: 'pointer' } : {}}\r\n                    className='ce-section-title-container ce-photo-title-container'\r\n                >\r\n                    <div \r\n                        className='ce-section-title ce-photo-title'\r\n                        style={{ fontSize: '17px', padding: '12px', fontWeight: '600' }}\r\n                    >\r\n                        Photos\r\n                    </div>\r\n\r\n                    {\r\n                        this.state.collapsed ?\r\n                        <LeftOutlined style={styles.collapseIcon} /> :\r\n                        <DownOutlined style={styles.collapseIcon} />\r\n                    }\r\n                </div>\r\n\r\n                {\r\n                    !this.state.collapsed &&\r\n                    <div className='ce-photo-feed'>\r\n                        <div style={{ height: '12px' }} />\r\n\r\n                        { this.renderPhotos(chat.attachments) }\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    collapseIcon: {\r\n        float: 'right',\r\n        position: 'relative',\r\n        bottom: '30px',\r\n        right: '12px'\r\n    }\r\n}\r\n","import React from 'react'\r\n\r\nimport { deleteChat } from 'react-chat-engine'\r\nimport { Button } from '../../components/Button'\r\n\r\nimport { LeftOutlined, DownOutlined } from '@ant-design/icons'\r\n\r\nexport default class Options extends React.Component {\r\n    state = {\r\n        collapsed: true,\r\n        hovered: false\r\n    }\r\n\r\n    render() {\r\n        const { chat, creds } = this.props \r\n\r\n        if (!chat) { return <div /> }\r\n\r\n        return (\r\n            <div style={{ borderTop: '1px solid #f0f0f0' }}>\r\n\r\n                <div \r\n                    onMouseEnter={() => this.setState({ hovered: true })}\r\n                    onMouseLeave={() => this.setState({ hovered: false })}\r\n                    onClick={() => this.setState({ collapsed: !this.state.collapsed })}\r\n                    style={this.state.hovered ? { backgroundColor: '#f0f0f0', cursor: 'pointer' } : {}}\r\n                >\r\n\r\n                    <div style={{ fontSize: '17px', padding: '12px', fontWeight: '600' }}>\r\n                        Options\r\n                    </div>\r\n\r\n                    {\r\n                        this.state.collapsed ?\r\n                        <LeftOutlined style={styles.collapseIcon} /> :\r\n                        <DownOutlined style={styles.collapseIcon} />\r\n                    }\r\n\r\n                </div>\r\n                \r\n                {\r\n                    !this.state.collapsed &&\r\n                    <div>\r\n\r\n                        <div style={{ height: '12px' }} />\r\n\r\n                        <Button \r\n                            value=\"Delete\" \r\n                            theme='danger'\r\n                            icon='delete'\r\n                            onClick={() => deleteChat(creds, chat.id, (data) => {})}\r\n                            style={{ width: '100%', marginBottom: '12px' }}\r\n                        />\r\n\r\n                    </div>\r\n                }\r\n            \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    collapseIcon: {\r\n        float: 'right',\r\n        position: 'relative',\r\n        bottom: '30px',\r\n        right: '12px'\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nimport { editChat } from 'react-chat-engine'\r\nimport { TextInput } from '../../components/Input'\r\n\r\nexport default class MessageForm extends React.Component {\r\n    state = {\r\n        activeChat: null,\r\n        value: ''\r\n    }\r\n  \r\n    handleChange(event) {\r\n        this.setState({value: event.target.value});\r\n    }\r\n  \r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n\r\n        editChat(\r\n            this.props.creds, \r\n            this.props.chat.id,\r\n            { title: this.state.value },\r\n            (data) => {}\r\n        )\r\n    }\r\n\r\n    // Update on new active chat. TODO: Find more eloquent way perhaps\r\n    componentDidUpdate() {\r\n        if(this.props.chat.title !== this.state.value && this.state.activeChat !== this.props.chat.id) {\r\n            this.setState({ \r\n                value: this.props.chat.title,\r\n                activeChat: this.props.chat.id\r\n            })\r\n        }\r\n    }\r\n  \r\n    render() {\r\n        return (\r\n            <form onSubmit={this.handleSubmit.bind(this)} className='ce-chat-title-form'>\r\n\r\n                <TextInput \r\n                    label=\"Rename this Chat\" \r\n                    value={this.state.value} \r\n                    default={this.props.chat.title}\r\n                    handleChange={this.handleChange.bind(this)} \r\n                    style={{ \r\n                        fontSize: '16px',\r\n                        fontWeight: '600',\r\n                        textAlign: 'center',\r\n                        border: '0px solid white',\r\n                        width: '100%',\r\n                    }}\r\n                />\r\n\r\n            </form>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react'\r\n\r\nimport { Avatar } from '../components/Avatar'\r\n\r\nimport TitleForm from './TitleForm'\r\n\r\nexport default class ChatSettings extends Component {\r\n\r\n    renderOnePerson(people) {\r\n        return (\r\n            <div style={{ width: '100%', paddingTop: '14px' }}>\r\n                <div style={{ float: 'left', position: 'relative', left: 'calc(50% - 22px)' }}>\r\n                    <Avatar \r\n                        show_online={false} \r\n                        username={people[0].person.username} \r\n                        avatar={people[0].person.avatar}\r\n                    />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderTwoPeople(people) {\r\n        return (\r\n            <div style={{ width: '100%', paddingTop: '14px' }}>\r\n                <div style={{ float: 'left', position: 'relative', left: 'calc(50% - 22px - 15px)' }}>\r\n                    <Avatar \r\n                        show_online={false} \r\n                        username={people[0].person.username} \r\n                        avatar={people[0].person.avatar}\r\n                    />\r\n                </div>\r\n\r\n                <div style={{ float: 'left', position: 'relative', left: 'calc(50% - 44px - 22px + 15px)' }}>\r\n                    <Avatar \r\n                        show_online={false} \r\n                        username={people[1].person.username} \r\n                        avatar={people[1].person.avatar}\r\n                    />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderThreePeople(people) {\r\n        return (\r\n            <div style={{ width: '100%', paddingTop: '14px' }}>\r\n                <div style={{ float: 'left', position: 'relative', left: 'calc(50% - 22px - 24px)' }}>\r\n                    <Avatar \r\n                        show_online={false} \r\n                        username={people[0].person.username}\r\n                        avatar={people[0].person.avatar}\r\n                    />\r\n                </div>\r\n\r\n                <div style={{ float: 'left', position: 'relative', left: 'calc(50% - 24px - 44px)' }}>\r\n                    <Avatar \r\n                        show_online={false} \r\n                        username={people[1].person.username} \r\n                        avatar={people[1].person.avatar}\r\n                    />\r\n                </div>\r\n\r\n                <div style={{ float: 'left', position: 'relative', left: 'calc(50% - 22px - 44px - 44px + 24px)' }}>\r\n                    <Avatar \r\n                        show_online={false} \r\n                        username={people[2].person.username}\r\n                        avatar={people[2].person.avatar}\r\n                    />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const { chat, creds } = this.props\r\n        const topPeople = chat ? chat.people.slice(0, 3) : []\r\n        \r\n        return (\r\n            <div className='ce-chat-settings-container'>\r\n                <div className='ce-chat-avatars-row'>\r\n                    { topPeople.length === 1 && this.renderOnePerson(topPeople) }\r\n                    \r\n                    { topPeople.length === 2 && this.renderTwoPeople(topPeople) }\r\n\r\n                    { topPeople.length === 3 && this.renderThreePeople(topPeople) }\r\n                </div>\r\n\r\n                <TitleForm chat={chat} creds={creds} />\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\n\r\nimport People from './People'\r\nimport Photos from './Photos'\r\nimport Options from './Options'\r\nimport ChatSettings from './ChatSettings'\r\n\r\nexport default class ChatSettingsContainer extends Component {\r\n\r\n    render() {\r\n        const { chats, activeChat } = this.props\r\n        const chat = chats && chats[activeChat] \r\n        \r\n        if (!chat) return <div style={styles.filler} />\r\n        \r\n        return (\r\n            <div style={styles.settingsContainer} className='ce-settings'>\r\n\r\n                <div style={{ width: '90%', paddingLeft: '5%' }} className='ce-settings-container'>\r\n\r\n                    {\r\n                        this.props.renderChatSettingsTop ?\r\n                        this.props.renderChatSettingsTop(this.props, chat) :\r\n                        <ChatSettings creds={this.props} chat={chat} />\r\n                    }\r\n\r\n                    {\r\n                        this.props.renderPeopleSettings ?\r\n                        this.props.renderPeopleSettings(this.props, chat) :\r\n                        <People creds={this.props} chat={chat} />\r\n                    }\r\n\r\n                    {\r\n                        this.props.renderPhotosSettings ?\r\n                        this.props.renderPhotosSettings(chat) :\r\n                        <Photos chat={chat} />\r\n                    }\r\n\r\n                    {\r\n                        this.props && chat && this.props.userName === chat.admin.username  &&\r\n                        <div>\r\n                            {\r\n                                this.props.renderOptionsSettings ?\r\n                                this.props.renderOptionsSettings(this.props, chat) :\r\n                                <Options creds={this.props} chat={chat} />\r\n                            }\r\n                        </div>\r\n                    }\r\n\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    settingsContainer: { \r\n        height: '100%',\r\n        overflow: 'scroll',\r\n        overflowX: 'hidden',\r\n        borderLeft: '1px solid #afafaf',\r\n        backgroundColor: 'white'\r\n    },\r\n    filler: { \r\n        display: 'flex',\r\n        width: '90%',\r\n        paddingLeft: '5%',\r\n        borderLeft: '1px solid #afafaf'\r\n    }\r\n}","import { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { FaTimesCircle } from 'react-icons/fa';\r\n\r\nconst SigninForm = () => {\r\n    const [ user, setUser ] = useState('');\r\n    const [ secret, setSecret ] = useState('');\r\n    const [ firstName, setFirstName ] = useState('');\r\n    const [ lastName, setLastName ] = useState('');\r\n    const [ problem, setProblem] = useState('');\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const newUser = {\r\n            'username': user, \r\n            'secret': secret, \r\n            'first_name': firstName, \r\n            'last_name': lastName\r\n        }\r\n\r\n        try {\r\n            await axios.post('https://api.chatengine.io/projects/people/', \r\n            newUser,\r\n            { headers:  { \"Private-Key\": 'ff158f92-6b68-47f5-a7f0-32b5ade713f5' } \r\n            });\r\n\r\n            window.location.reload();\r\n        } catch (error) {\r\n            setProblem('No se pudo registrar. Revise los datos y reintente.');\r\n        }\r\n    }\r\n\r\n    const checkPassword = (e) => {\r\n        let error = document.getElementById('pw-error');\r\n        let register = document.getElementById('register-btn');\r\n\r\n        if(e.target.value === '') {\r\n            error.style.display = 'none';\r\n            register.disabled = true;\r\n        } else if(e.target.value !== secret) {\r\n            error.style.display = 'block';\r\n            register.disabled = true;\r\n        } else {\r\n            error.style.display = 'none';\r\n            register.disabled = false;\r\n        }\r\n    }\r\n\r\n    let isVisible = false;\r\n\r\n    const toggleModal = (e) => {\r\n        let modal = document.querySelector('.sign-modal');\r\n\r\n        if(!isVisible) {\r\n            modal.style.top = '0';\r\n            isVisible = true;\r\n        } else {\r\n            modal.style.top = '-200%';\r\n            isVisible = false;\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <button className=\"sign-btn\" onClick={toggleModal}>No tengo una cuenta</button>\r\n\r\n            <div className=\"sign-modal\">\r\n                <button className=\"toggle-btn\" onClick={toggleModal}>\r\n                    <FaTimesCircle className=\"toggle-icon\" />\r\n                </button>\r\n                <form className=\"register\" onSubmit={handleSubmit}>\r\n                    <h1 className=\"title\">ZHAT</h1>\r\n\r\n                    <input className=\"input\" value={user}\r\n                    onChange={(e) => setUser(e.target.value)}\r\n                    placeholder=\"Username\" required />\r\n\r\n                    <input className=\"input\" value={firstName}\r\n                    onChange={(e) => setFirstName(e.target.value)}\r\n                    placeholder=\"Nombre\" required />\r\n\r\n                    <input className=\"input\" value={lastName}\r\n                    onChange={(e) => setLastName(e.target.value)}\r\n                    placeholder=\"Apellido\" required />\r\n\r\n                    <input className=\"input\" value={secret}\r\n                    type=\"password\"\r\n                    onChange={(e) => setSecret(e.target.value)}\r\n                    placeholder=\"Contraseña\" required />\r\n\r\n                    <div className=\"repeat-password-container\">\r\n                        <input className=\"input\" id=\"repeat-password\"\r\n                        onInput={checkPassword} type=\"password\"\r\n                        placeholder=\"Repite la contraseña\" required />\r\n                        <p id=\"pw-error\">Las contraseñas no coinciden!</p>\r\n                    </div>\r\n\r\n                    <button className=\"submit-btn\" id=\"register-btn\" type=\"submit\" disabled>\r\n                        Regístrate\r\n                    </button>\r\n                    <p className=\"error\">{problem}</p>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SigninForm;","import SigninForm from './SigninForm';\r\nimport { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { FaGithub, FaComment } from 'react-icons/fa';\r\n\r\nconst LoginForm = () => {\r\n    const [ username, setUsername ] = useState('');\r\n    const [ password, setPassword ] = useState('');\r\n    const [ error, setError ] = useState('')\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const authObject = {\r\n            'Project-ID': 'a535e95b-8fbb-46fd-b164-46d3e687cd44',\r\n            'User-Name': username,\r\n            'User-Secret': password\r\n        }\r\n\r\n        try {\r\n            await axios.get('https://api.chatengine.io/chats', { headers: authObject });\r\n\r\n            localStorage.setItem('username', username);\r\n            localStorage.setItem('password', password);\r\n\r\n            window.location.reload();\r\n        } catch (error) {\r\n            setError('Datos incorrectos, por favor, intente de nuevo.')\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className=\"wrapper\">\r\n            <div className=\"form\">\r\n                <FaComment className=\"icon\" />\r\n                <h1 className=\"title\">ZHAT</h1>\r\n                <form onSubmit={handleSubmit}>\r\n                    <input type=\"text\" value={username} \r\n                    onChange={(e) => setUsername(e.target.value)}\r\n                    className=\"input\" placeholder=\"Nombre de usuario\" required />\r\n                    <input type=\"password\" value={password} \r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                    className=\"input\" placeholder=\"Contraseña\" required />\r\n                    <div align=\"center\">\r\n                        <button type=\"submit\" className=\"submit-btn\">\r\n                            Entrar\r\n                        </button>\r\n                            <p className=\"error\">{error}</p>\r\n                    </div>\r\n                </form>\r\n                <SigninForm />\r\n            </div>\r\n            <footer className=\"footer\">\r\n                <address>\r\n                    <a href=\"https://github.com/angelmgl/\" target=\"_blank\">\r\n                        <FaGithub /> Angel Mgl 2021&copy;\r\n                    </a>\r\n                </address>\r\n            </footer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginForm;","import { ChatEngine } from 'react-chat-engine';\r\n\r\nimport ChatFeed from './components/ChatUi/ChatFeed';\r\nimport ChatList from './components/ChatUi/ChatList';\r\nimport ChatSettings from './components/ChatUi/ChatSettings/';\r\nimport LoginForm from './components/LoginForm';\r\n\r\nimport './styles/styles.css';\r\n\r\nconst App = () => {\r\n    if(!localStorage.getItem('username')) return <LoginForm />\r\n\r\n    return(\r\n        <ChatEngine \r\n            height=\"100vh\"\r\n            projectID=\"a535e95b-8fbb-46fd-b164-46d3e687cd44\"\r\n            userName={localStorage.getItem('username')}\r\n            userSecret={localStorage.getItem('password')}\r\n            renderChatFeed={(chatAppProps) => <ChatFeed {...chatAppProps} />}\r\n            renderChatList={(chatAppProps) => <ChatList {...chatAppProps} />}\r\n            renderChatSetting={(chatAppProps) => <ChatSettings {...chatAppProps} />}\r\n        />\r\n    )\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}